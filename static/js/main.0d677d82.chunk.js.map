{"version":3,"sources":["components/Button.js","components/Header.js","components/ReactDayPicker.js","components/ErrorModal.js","components/SuccessModal.js","components/AddTaskForm.js","components/EditModal.js","components/Modal.js","components/TaskCard.js","components/AddTask.js","components/TaskTitle.js","components/TaskList.js","components/EditTask.js","components/CloseTask.js","components/ManageTasks.js","components/BarChart.js","hooks/useD3.js","components/TaskAnalytics.js","components/ViewTasks.js","components/Body.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","activeBtn","id","classAdds","onClick","onclick","text","Header","showViewTask","body","showAddTask","showAnalytics","logout","ReactDayPicker","useState","defaultDate","Date","date","setDate","FORMAT","formatDate","format","locale","dateFnsFormat","placeholder","inputProps","readOnly","onDayChange","onChange","ErrorModal","closeOnEscapeKeyDown","e","charCode","keyCode","onClose","useEffect","document","addEventListener","removeEventListener","show","stopPropagation","errList","map","item","SuccessModal","AddTaskForm","emps","setEmps","showErr","setShowErr","showSuccess","setShowSuccess","errorList","setErrorList","dayKey","setDayKey","options","urgencies","parseInt","prevDueDate","setPrevDueDate","prevAssignedTo","setPrevAssignedTo","prevTaskTitle","setPrevTaskTitle","prevStatus","setPrevStatus","prevCreateDate","prevPriority","setPrevPriority","prevDepartment","setPrevDepartment","prevDescription","setPrevDescription","prevEmpId","setPrevEmpId","genOptions","option","fetch","then","response","json","handleChange","event","setValue","target","value","findEmpDept","findEmpId","console","log","empName","key","name","toLowerCase","deptId","createTaskFromForm","taskTitle","dueDate","toString","createDate","status","description","assignedTo","priority","empId","updatePreviewTask","validateTask","ct","errorStrings","valid","length","push","includes","isEmpValid","emp","clearForm","getElementById","reset","selected","Object","keys","day","validResults","onsubmit","EditModal","task","setEmp","dept","setDept","setStatus","level","setLevel","setDescription","setEmpId","modTask","setModTask","getTaskFromChanges","setValues","vals","split","modifyAssignedTo","taskId","sendToAPI","a","myHeaders","Headers","append","ready","JSON","stringify","requestOptions","method","headers","redirect","result","parse","catch","err","res","classname","genEmps","d","getTime","classAdd","Modal","TaskCard","setShow","dateObj","getDate","month","getMonth","year","getFullYear","draggable","getColor","edit","AddTask","previewTask","setPreviewTask","addTask","mySubHeaders","rawSub","error","newTask","style","margin","TaskTitle","TaskList","title","buildTaskCard","EditTask","tasks","setTasks","CloseTask","ManageTasks","view","setView","active","setActive","handleClick","selectView","BarChart","ref","renderChartFn","dependencies","React","useRef","d3","current","useD3","svg","x","domain","data","xAxis","rangeRound","padding","y1","yAxis","select","attr","call","y1Axis","selectAll","join","bandwidth","height","width","marginRight","marginLeft","backgroundColor","transform","y","fill","textAnchor","fontWeight","TaskAnalytics","dataByDept","setDataByDept","dataByEmp","setDataByEmp","dataByStatus","setDataByStatus","chartData","setChartData","setXAxis","btnActive","setBtnActive","setKey","ViewTasks","currentEmp","setCurrentEmp","empList","setEmpList","findEmpWhoHaveTasks","filterTasks","filterTasksByStatus","filterTasksByStatusAndEmployee","doesEntryMatch","entry","matchValue","locEmpList","forEach","Body","whatToShow","Login","message","setMessage","type","preventDefault","password","querySelector","username","raw","pass","authenticated","login","App","setBody","loggedIn","setLoggedIn","showViewTasks","handleLogin","handleLogout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d677d82.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Button(props) {\r\n    return (\r\n        <button\r\n            className={`${props.activeBtn === props.id ? \"border-2 font-bold bg-gray-600 text-white\" : \"font-semibold border-2 bg-white text-gray-800\"} border-white hover:text-black hover:bg-gray-400 py-2 px-4 rounded shadow ${props.classAdds}`}\r\n            onClick={props.onclick}\r\n            id={props.id}\r\n            >{props.text}</button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"grid grid-cols-4 h-1-10\">\r\n            <Button text=\"View Tasks\" onclick={props.showViewTask} classAdds=\"max-w-max m-auto\" id=\"viewBtn\" activeBtn={`${props.body}Btn`}/>\r\n            <Button text=\"Manage Tasks\" onclick={props.showAddTask} classAdds=\"max-w-max m-auto\" id=\"addBtn\" activeBtn={`${props.body}Btn`}/>\r\n            <Button text=\"View Analytics\" onclick={props.showAnalytics} classAdds=\"max-w-max m-auto\" id=\"analBtn\" activeBtn={`${props.body}Btn`}/>\r\n            <Button text=\"Log Out\" onclick={props.logout} classAdds=\"max-w-max m-auto\" id=\"logoutBtn\" activeBtn={`${props.body}Btn`}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport dateFnsFormat from 'date-fns/format';\r\n\r\nexport default function ReactDayPicker(props) {\r\n  const [date, setDate] = useState(typeof props.defaultDate !== 'undefined' ? new Date(props.defaultDate * 1000) : new Date());\r\n  const FORMAT = 'MM/dd/yyyy';\r\n\r\n  function onChange(date) {\r\n    setDate(date);\r\n    props.onChange(date);\r\n  }\r\n\r\n  function formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n  }\r\n\r\n  return <DayPickerInput formatDate={formatDate} placeholder={`${dateFnsFormat(date,FORMAT)}`} format={FORMAT} inputProps={{readOnly:true}} onDayChange={onChange} />;\r\n}","import React, {useEffect} from 'react'\r\n\r\nexport default function ErrorModal(props) {\r\n    const closeOnEscapeKeyDown = (e) => {\r\n        if((e.charCode || e.keyCode) === 27){\r\n            props.onClose();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.body.addEventListener('keydown',closeOnEscapeKeyDown)\r\n        return function cleanup() {\r\n            document.body.removeEventListener('keydown',closeOnEscapeKeyDown)\r\n        }\r\n    }, [])\r\n\r\n    const generateListItem = (item) => {\r\n        return <li>{item}</li>\r\n    }\r\n    \r\n    \r\n    if(!props.show){\r\n        return null;\r\n    }else{\r\n        return (\r\n            <div className=\"modal\" onClick={props.onClose}>\r\n                <div className=\"modal-content rounded border-2 border-black text-black\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header grid grid-cols-4\">\r\n                        <h4 className=\"modal-title col-start-2 col-span-2 text-xl\">Invalid Data Present</h4>\r\n                        <div className=\"text-right\">\r\n                            <button onClick={props.onClose} className=\"w-3/6 button bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">X</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-body h-96 grid grid-rows-4 content-end\">\r\n                        <div className='task-description row-start-2'>\r\n                            <ul id=\"errorList\" className=\"list-disc list-inside\">\r\n                                {props.errList.map(generateListItem)}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button onClick={props.onClose} className=\"button bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nexport default function SuccessModal(props) {\r\n    const closeOnEscapeKeyDown = (e) => {\r\n        if((e.charCode || e.keyCode) === 27){\r\n            props.onClose();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.body.addEventListener('keydown',closeOnEscapeKeyDown)\r\n        return function cleanup() {\r\n            document.body.removeEventListener('keydown',closeOnEscapeKeyDown)\r\n        }\r\n    }, [])\r\n    \r\n    if(!props.show){\r\n        return null;\r\n    }else{\r\n        return (\r\n            <div className=\"modal\" onClick={props.onClose}>\r\n                <div className=\"modal-content rounded border-2 border-black text-black\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header grid grid-cols-4\">\r\n                        <h4 className=\"modal-title col-start-2 col-span-2 text-xl\">Task Successfully Added</h4>\r\n                        <div className=\"text-right\">\r\n                            <button onClick={props.onClose} className=\"w-3/6 button bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">X</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button onClick={props.onClose} className=\"button bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect} from 'react'\r\nimport ReactDayPicker from './ReactDayPicker';\r\nimport Button from './Button';\r\nimport ErrorModal from './ErrorModal';\r\nimport SuccessModal from './SuccessModal';\r\n\r\nexport default function AddTaskForm(props) {\r\n\r\n    const [emps, setEmps] = useState({});\r\n    const [showErr, setShowErr] = useState(false);\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [errorList, setErrorList] = useState([]);\r\n    const [dayKey, setDayKey] = useState(1);\r\n\r\n    let options = ['Todo','In Progress','Staging','UAT','Production'];\r\n    let urgencies = ['Low','Medium','High'];\r\n\r\n    const [prevDueDate,setPrevDueDate] = useState(parseInt(new Date()/1000))\r\n    const [prevAssignedTo,setPrevAssignedTo] = useState(\"\");\r\n    const [prevTaskTitle,setPrevTaskTitle] = useState(\"\");\r\n    const [prevStatus,setPrevStatus] = useState(\"\");\r\n    const [prevCreateDate] = useState(parseInt(new Date()/1000));\r\n    const [prevPriority,setPrevPriority] = useState(\"\");\r\n    const [prevDepartment,setPrevDepartment] = useState(\"\");\r\n    const [prevDescription,setPrevDescription] = useState(\"\");\r\n    const [prevEmpId,setPrevEmpId] = useState(\"\");\r\n\r\n\r\n    const genOptions = (option) => {\r\n        return <option key={option}>{option}</option>;\r\n    }\r\n    const updateDate = (day) => {\r\n        setPrevDueDate(parseInt(new Date(day)/1000))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fetch(\"https://databasedesignprojapi.herokuapp.com/queries/getEmployees\")\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n            setEmps(response);\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.id,event.target.value);\r\n    }\r\n\r\n    const setValue = (id,value) => {\r\n        switch (id) {\r\n            case \"title\":\r\n                setPrevTaskTitle(value);\r\n                return;\r\n            case \"level\":\r\n                setPrevPriority(value);\r\n                return;        \r\n            case \"assignedTo\":\r\n                setPrevAssignedTo(value);\r\n                setPrevDepartment(findEmpDept(value));\r\n                setPrevEmpId(findEmpId(value));\r\n                return;\r\n            case \"status\":\r\n                setPrevStatus(value);\r\n                return;\r\n            case \"desc\":\r\n                setPrevDescription(value);\r\n                return;\r\n            default:\r\n                console.log(`Incorrect ID:  ${id}`)\r\n                return;\r\n        }\r\n    }\r\n\r\n    const findEmpDept = (empName) => {\r\n        for(const key in emps){\r\n            if(emps[key].name.toLowerCase() === empName.toLowerCase()){\r\n                return emps[key].deptId;\r\n            }\r\n        }\r\n        return \"N/A\";\r\n    }\r\n\r\n    const findEmpId = (empName) => {\r\n        for(const key in emps){\r\n            if(emps[key].name.toLowerCase() === empName.toLowerCase()){\r\n                return key;\r\n            }\r\n        }\r\n        return \"N/A\";\r\n    }\r\n\r\n    const updateTask = () => {\r\n        props.updatePreviewTask(createTaskFromForm());\r\n    }\r\n\r\n    const createTaskFromForm = () => {\r\n        return {\r\n            taskTitle:prevTaskTitle,\r\n            dueDate: prevDueDate.toString(),\r\n            createDate: prevCreateDate.toString(),\r\n            status: prevStatus,\r\n            description: prevDescription,\r\n            assignedTo : prevAssignedTo,\r\n            priority: prevPriority,\r\n            deptId: prevDepartment,\r\n            empId : prevEmpId\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateTask();\r\n    },[prevDepartment,prevDescription,prevDueDate,prevPriority,prevStatus,prevTaskTitle])\r\n\r\n    const submitClick = () => {\r\n        const validResults = validateTask();\r\n        if(!validResults[0]){\r\n            setErrorList(validResults[1]);\r\n            setShowErr(true);\r\n        }else{\r\n            setShowSuccess(true);\r\n            clearForm();\r\n            console.log(props.onsubmit(createTaskFromForm()));\r\n        }\r\n        \r\n    }\r\n\r\n    const validateTask = () => {\r\n        let ct = createTaskFromForm();\r\n        let errorStrings = []\r\n        let valid = true;\r\n        if(ct.taskTitle.length < 5){\r\n            valid = false;\r\n            errorStrings.push(`Title should be at least 5 characters.`);\r\n        }\r\n        if(ct.dueDate === \"\" || ct.dueDate < parseInt(new Date()/1000)){\r\n            valid = false;\r\n            errorStrings.push(`Due date needs to be some time in the future.`)\r\n        }\r\n        if(!options.includes(ct.status)){\r\n            valid = false;\r\n            errorStrings.push(`Please select a status for the task.`)\r\n        }\r\n        if(!urgencies.includes(ct.priority)){\r\n            valid = false;\r\n            errorStrings.push(`Please select an urgency level.`);\r\n        }\r\n        if(!isEmpValid(ct.assignedTo)){\r\n            valid = false;\r\n            errorStrings.push(`Please select someone to assign the ticket to.`)\r\n        }\r\n        if(ct.description.length < 10){\r\n            valid = false;\r\n            errorStrings.push(`Description should be at least 10 characters`);\r\n        }\r\n        return [valid,errorStrings];\r\n    }\r\n\r\n    const isEmpValid = (emp) => {\r\n        for(const key in emps){\r\n            if(emps[key].name.toLowerCase() === emp.toLowerCase()){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    const clearForm = () => {\r\n        document.getElementById('addTaskForm').reset();\r\n        setDayKey(dayKey + 1);\r\n        setPrevDueDate(parseInt(new Date()/1000));\r\n        setPrevAssignedTo(\"\");\r\n        setPrevTaskTitle(\"\");\r\n        setPrevStatus(\"\");\r\n        setPrevPriority(\"\");\r\n        setPrevDepartment(\"\");\r\n        setPrevDescription(\"\");\r\n        setPrevEmpId(\"\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4 className=\"text-gray-100 text-2xl\">Add A Task</h4>\r\n            <form id=\"addTaskForm\"className=\"addTaskForm grid grid-cols-2 grid-rows-8 text-left gap-2\">\r\n                <div>Task Title:</div>\r\n                <div>\r\n                    <input\r\n                        id=\"title\"\r\n                        className=\"rounded taskTitle text-black w-2/3\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div>Task Description:</div>\r\n                <div>\r\n                    <textarea onChange={handleChange} id=\"desc\" className=\"rounded taskDescription text-black w-2/3\"/>\r\n                </div>\r\n                <div>Task Status:</div>\r\n                <select onChange={handleChange} id=\"status\" className=\"text-black taskStatus rounded w-2/3\">\r\n                    <option value={null} selected>Select One</option>\r\n                    {options.map(genOptions)}\r\n                </select>\r\n                <div>Urgency:</div>\r\n                <select onChange={handleChange} id=\"level\" className=\"text-black taskLevel rounded w-2/3\">\r\n                    <option value={null} selected>Select One</option>\r\n                    {urgencies.map(genOptions)}\r\n                </select>\r\n                <div>Assigned To:</div>\r\n                <select onChange={handleChange} id=\"assignedTo\" className=\"text-black taskAssignedTo rounded w-2/3\">\r\n                    <option value={null} selected>Select One</option>\r\n                    {Object.keys(emps).map((key) => {return genOptions(emps[key].name)})}\r\n                </select>\r\n                <div>Due Date:</div>\r\n                <div>\r\n                    <ReactDayPicker key={`due-${dayKey}`} onChange={updateDate}/>\r\n                </div>                \r\n            </form>\r\n            <Button activeBtn={false} onclick={submitClick} id=\"addTaskSubmit\" text=\"Add Task\" classAdds=\"my-3\"/>\r\n            <ErrorModal show={showErr} errList={errorList} onClose={() => setShowErr(false)}/>\r\n            <SuccessModal show={showSuccess} onClose={() => setShowSuccess(false)} />\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect} from 'react'\r\nimport Button from './Button';\r\nimport ReactDayPicker from './ReactDayPicker';\r\n\r\nexport default function EditModal(props) {\r\n    const [emp, setEmp] = useState(props.task.assignedTo);\r\n    const [dept, setDept] = useState(props.task.deptId);\r\n    const [date,setDate] = useState(props.task.dueDate);\r\n    const [status, setStatus] = useState(props.task.status);\r\n    const [level, setLevel] = useState(props.task.priority);\r\n    const [description, setDescription] = useState(props.task.description);\r\n    const [empId, setEmpId] = useState(props.task.empId);\r\n    const [modTask, setModTask] = useState(props.task);\r\n    let options = ['Todo','In Progress','Staging','UAT','Production','Closed'];\r\n    let urgencies = ['Low','Medium','High'];\r\n    const closeOnEscapeKeyDown = (e) => {\r\n        if((e.charCode || e.keyCode) === 27){\r\n            props.onClose();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.body.addEventListener('keydown',closeOnEscapeKeyDown)\r\n        return function cleanup() {\r\n            document.body.removeEventListener('keydown',closeOnEscapeKeyDown)\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setModTask(getTaskFromChanges());\r\n    },[emp,dept,date,status,level,description])\r\n\r\n\r\n    const handleDateChange = (date) => {\r\n        setDate(date.getTime()/1000)\r\n    }\r\n    \r\n    const genEmps = (emp, selected = null,key) => {\r\n        if(emp.name.toLowerCase() == selected.toLowerCase()){\r\n            return <option selected value={`${emp.deptId}|${emp.name}|${key}`}>{emp.name}</option>            \r\n        }\r\n        return <option value={`${emp.deptId}|${emp.name}|${key}`}>{emp.name}</option>\r\n    }\r\n\r\n    const genOptions = (option, selected = \"\") => {\r\n        if(option.toLowerCase() === selected.toLowerCase()){\r\n            return <option selected>{option}</option>\r\n        }\r\n        return <option>{option}</option>\r\n    }\r\n\r\n    const modifyDescription = (text) => {\r\n        if(text.length == 0){\r\n            setDescription(props.task.description);\r\n        }else{\r\n            setDescription(text);\r\n        }\r\n    }\r\n\r\n    const modifyAssignedTo = (value) => {\r\n        let vals = value.split(\"|\");\r\n        setEmp(vals[1]);\r\n        setDept(vals[0]);\r\n        setEmpId(vals[2]);\r\n    }\r\n\r\n    const setValues = (id,value) => {\r\n        switch (id) {\r\n            case \"description\":\r\n                modifyDescription(value);\r\n                return;\r\n            case \"assignedTo\":\r\n                modifyAssignedTo(value);\r\n                return;\r\n            case \"status\":\r\n                setStatus(value);\r\n                return;\r\n            case \"level\":\r\n                setLevel(value);\r\n                return;\r\n            default:\r\n                console.log(\"invalid input\")\r\n        }\r\n    }\r\n\r\n    const getTaskFromChanges = () => {\r\n        return {\r\n            taskId:props.taskId,\r\n            taskTitle:props.task.taskTitle,\r\n            dueDate:date.toString(),\r\n            createDate:props.task.createDate,\r\n            description:description,\r\n            status:status,\r\n            assignedTo:emp,\r\n            level:level,\r\n            deptId:dept,\r\n            empId:empId\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValues(event.target.id,event.target.value);\r\n    }\r\n\r\n    const sendToAPI = async () => {\r\n        console.log(modTask);\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\",\"application/json\");\r\n        let ready = JSON.stringify(modTask);\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: ready,\r\n            redirect: 'follow'\r\n        }\r\n        const res = await fetch('https://databasedesignprojapi.herokuapp.com/posts/updateTask', requestOptions)\r\n        .then(response => response.text())\r\n        .then((result) =>{\r\n            console.log(result);\r\n            if(JSON.parse(result).task == 'accepted'){\r\n                props.onClose()\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n        return res;\r\n    }\r\n    \r\n    if(!props.show){\r\n        return null;\r\n    }else{\r\n        return (\r\n            <div className=\"modal\" onClick={props.onClose}>\r\n                <div className=\"modal-content rounded border-2 border-black\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header grid grid-cols-4\">\r\n                        <h4 className=\"modal-title col-start-2 col-span-2\">{`${props.task.taskTitle}`} <br/> Task ID: {props.taskId}</h4>\r\n                        <div className=\"text-right\">\r\n                            <button onClick={props.onClose} className=\"w-3/6 button bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">X</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-body grid grid-cols-5\">\r\n                        <div className=\"col-span-2 grid grid-rows-5 gap-3\">\r\n                            <div className='task-description'>\r\n                                {props.task.description}\r\n                            </div>\r\n                            <div className=\"task-assignedTo\">Assigned To: {props.task.assignedTo}</div>\r\n                            <div classname=\"task-status\">Status: {props.task.status}</div>\r\n                            <div className=\"task-dept\">Urgency: <br/> {props.task.level}</div>                         \r\n                            <div className=\"task-due\">Due Date: {props.formatDate(props.task.dueDate)}</div>\r\n                        </div>\r\n                        <div className=\"col-span-1 grid grid-rows-5 inline-block align-middle gap-3\">\r\n                            <div>&#8594;</div>\r\n                            <div>&#8594;</div>\r\n                            <div>&#8594;</div>\r\n                            <div>&#8594;</div>\r\n                            <div>&#8594;</div>\r\n                        </div>\r\n                        <div className=\"col-span-2 grid grid-rows-5 gap-3\">\r\n                            <textarea id=\"description\" onChange={handleChange} placeholder={props.task.description} className=\"description border-black border rounded\"/>\r\n                            <div className=\"grid grid-rows-2\">\r\n                                <select id=\"assignedTo\" onChange={handleChange} className=\"assignedTo h-6 box-border border border-black rounded\">\r\n                                    {Object.keys(props.emps).map((key) => {\r\n                                        return genEmps(props.emps[key],emp,key);\r\n                                    })}\r\n                                </select>\r\n                                <span>Dept: {dept}</span>\r\n                            </div>\r\n                            \r\n                            <select id=\"status\" onChange={handleChange} className=\"status h-6 box-border border border-black rounded\">\r\n                                {options.map((d) => {\r\n                                    return genOptions(d,status);\r\n                                })}\r\n                            </select>\r\n                            <select id=\"level\" onChange={handleChange} className=\"level h-6 box-border border border-black rounded\">\r\n                                {urgencies.map((d) => {\r\n                                    return genOptions(d,level);\r\n                                })}\r\n                            </select>\r\n                            <ReactDayPicker onChange={handleDateChange} defaultDate={date}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <Button text={\"Update Task\"} onclick={sendToAPI} activeBtn={null} id={\"submit\"} classAdd={\"\"}/>\r\n                        {/* <button onClick={props.onClose} className=\"button bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">Close</button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nexport default function Modal(props) {\r\n    const closeOnEscapeKeyDown = (e) => {\r\n        if((e.charCode || e.keyCode) === 27){\r\n            props.onClose();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.body.addEventListener('keydown',closeOnEscapeKeyDown)\r\n        return function cleanup() {\r\n            document.body.removeEventListener('keydown',closeOnEscapeKeyDown)\r\n        }\r\n    }, [])\r\n    \r\n    \r\n    if(!props.show){\r\n        return null;\r\n    }else{\r\n        return (\r\n            <div className=\"modal\" onClick={props.onClose}>\r\n                <div className=\"modal-content rounded border-2 border-black\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header grid grid-cols-4\">\r\n                        <h4 className=\"modal-title col-start-2 col-span-2\">{props.task.taskTitle}<br/> Task ID:  {props.taskId}</h4>\r\n                        <div className=\"text-right\">\r\n                            <button onClick={props.onClose} className=\"w-3/6 button bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">X</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-body h-96 grid grid-rows-5 content-end\">\r\n                        <div className='task-description row-start-2'>\r\n                            {props.task.description}\r\n                        </div>\r\n                        <div className=\"task-details row-start-5 grid grid-cols-3\">\r\n                            <div className=\"task-assignedTo\">Assigned To: {props.task.assignedTo}</div>\r\n                            <div className=\"task-dept\">Department: <br/> {props.task.deptId}</div>                         \r\n                            <div className=\"task-due\">Due Date: {props.formatDate(props.task.dueDate)}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button onClick={props.onClose} className=\"button bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport EditModal from './EditModal';\r\nimport Modal from './Modal';\r\n\r\nexport default function TaskCard(props) {\r\n    const [show,setShow] = useState(false);\r\n    const getColor = (task) => {\r\n        switch (task.priority.toLowerCase()) {\r\n            case \"high\":\r\n                return 'bg-red-200';\r\n            case \"medium\":\r\n                return 'bg-yellow-200';\r\n            case \"low\":\r\n                return \"bg-blue-200\";\r\n            default:\r\n                return 'bg-gray-200';\r\n        }\r\n    }\r\n\r\n    const formatDate = (date) =>{\r\n        let dateObj = new Date(date * 1000);\r\n        let day = dateObj.getDate();\r\n        let month = dateObj.getMonth() + 1;\r\n        let year = dateObj.getFullYear()\r\n        return `${month}/${day}/${year}`;\r\n    }\r\n\r\n    const whichModal = () => {\r\n        if(props.edit === true){\r\n            return <EditModal show={show} onClose={() => setShow(false)} task={props.task} formatDate={formatDate} taskId={props.taskId} emps={props.emps}/>\r\n        }else{\r\n            return <Modal show={show} onClose={() => setShow(false)} task={props.task} formatDate={formatDate} taskId={props.taskId}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div\r\n            draggable\r\n            className={`grid draggable content-around grid-cols-4 border-2 border-black my-2 mx-2 rounded ${getColor(props.task)}`}\r\n            onClick={() => setShow(true)}\r\n        >\r\n            <div className=\"col-span-4\">{props.task.taskTitle}</div>\r\n            <div className=\"col-span-2 text-left mx-1 text-sm\">{props.task.assignedTo}</div>\r\n            <div className=\"col-span-2 text-sm text-right mx-1\">{`Due Date: \\n ${formatDate(props.task.dueDate)}`}</div>\r\n        </div>\r\n        {whichModal()}\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport AddTaskForm from './AddTaskForm';\r\nimport TaskCard from './TaskCard';\r\n\r\nexport default function AddTask(props) {\r\n    const [previewTask,setPreviewTask] = useState({\r\n        \"taskTitle\": \"\",\r\n        \"dueDate\": \"\",\r\n        \"createDate\": \"\",\r\n        \"status\" : \"\",\r\n        \"description\" : \"\",\r\n        \"assignedTo\" : \"\",\r\n        \"priority\" : \"\",\r\n        \"deptId\" : \"\",\r\n        \"empId\" : \"\"\r\n    });\r\n    const updateTask = (newTask) => {\r\n        setPreviewTask(newTask)\r\n    }\r\n    const addTask = async (task) => {\r\n        var requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n        };\r\n        const res = await fetch(\"https://databasedesignprojapi.herokuapp.com/queries/getTaskId\", requestOptions)\r\n        .then(response => response.text())\r\n        .then(result => {\r\n            \r\n            task.taskId = JSON.parse(result).taskId;\r\n            var mySubHeaders = new Headers();\r\n            mySubHeaders.append(\"Content-Type\", \"application/json\");\r\n            var rawSub = JSON.stringify(task);\r\n            var requestOptions = {\r\n            method: 'POST',\r\n            headers: mySubHeaders,\r\n            body: rawSub,\r\n            redirect: 'follow'\r\n            };\r\n            fetch(\"https://databasedesignprojapi.herokuapp.com/posts/addTask\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n        })\r\n        .catch(error => console.log('error', error));\r\n\r\n        return res;\r\n    }\r\n    // useEffect(() => {\r\n    //     //console.log(previewTask);\r\n    // },[previewTask])\r\n    return (\r\n        <>\r\n        <div className=\"text-gray-100 col-start-2 row-start-2\">\r\n            <AddTaskForm updatePreviewTask={updateTask} onsubmit={addTask}/>\r\n        </div>\r\n        <div className=\"col-start-3 row-start-2 w-2/4 text-black text-xl\" style={{margin:'auto'}}><p className=\"text-gray-100\">Task Preview</p>\r\n            <TaskCard task={previewTask} taskId={\"####\"}/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TaskTitle(props) {\r\n    return (\r\n        <div className=\"my-2 text-gray-100\">\r\n            {props.text}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TaskCard from './TaskCard'\r\nimport TaskTitle from './TaskTitle'\r\n\r\nexport default function TaskList(props) {\r\n    const buildTaskCard = (task,taskId) =>{\r\n        return <TaskCard key={taskId} task={task} taskId={taskId} edit={props.edit} emps={props.emps ?? null}/>\r\n    }\r\n    return (\r\n        <div className=\"mx-2\">\r\n            <TaskTitle text={props.title}/>            \r\n            <div className=\"border-2 text-black border-black rounded h-full grid-rows-5 grid bg-gray-200 bg-opacity-50\">\r\n                {Object.keys(props.task).map((d) => { return buildTaskCard(props.task[d],d);})}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState} from 'react'\r\nimport TaskList from './TaskList';\r\n\r\nexport default function EditTask() {\r\n    const [tasks, setTasks] = useState({});\r\n    const [emps, setEmps] = useState({});\r\n    \r\n    useEffect(() => {\r\n        fetch(\"https://databasedesignprojapi.herokuapp.com/getEmployees\")\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n            setEmps(response);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://databasedesignprojapi.herokuapp.com/queries/getTasksByUser\")\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n            setTasks(response);\r\n        })\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className='col-start-2 row-start-2'>\r\n            <TaskList title=\"Click On Task To Edit\" task={tasks} edit={true} emps={emps}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CloseTask() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddTask from './AddTask';\r\nimport EditTask from './EditTask';\r\nimport CloseTask from './CloseTask';\r\nimport Button from './Button';\r\n\r\nexport default function ManageTasks() {\r\n    const [view, setView] = useState(\"add\");\r\n    const [active,setActive] = useState(\"add\");\r\n\r\n    const handleClick = (event) => {\r\n        setActive(event.target.id);\r\n        setView(event.target.id);\r\n    }\r\n\r\n    const selectView = () => {\r\n        switch (view) {\r\n            case \"add\":\r\n                return <AddTask/>\r\n            case \"edit\":\r\n                return <EditTask/>\r\n            case \"close\":\r\n                return <CloseTask/>\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-3 text-gray-100 grid-rows-6 h-9-10\">\r\n            <div className=\"grid grid-rows-6 row-start-3 row-span-2 grid-cols-6 col-start-1 gap-2\">\r\n                <Button id={\"add\"} activeBtn={active} text={\"Add A Task\"} onclick={handleClick} classAdds={\"py-2 px-4 rounded max-w-fill col-start-3 col-span-2\"}/>\r\n                <Button id={\"edit\"} activeBtn={active} text={\"Edit A Task\"} onclick={handleClick} classAdds={\"py-2 px-4 rounded max-w-fill col-start-3 col-span-2\"}/>\r\n            </div>\r\n            {selectView()}            \r\n        </div>\r\n    )\r\n}\r\n","import { useD3 } from '../hooks/useD3';\r\nimport React, { useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction BarChart(props) {\r\n\tconst height = 500;\r\n\tconst width = 1000;\r\n\tconst ref = useD3(\r\n\t\t(svg) => {\r\n\t\tconst height = 500;\r\n\t\tconst width = 1000;\r\n\t\tconst margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(props.data.map((d) => d[props.xAxis]))\r\n\t\t\t.rangeRound([margin.left, width - margin.right])\r\n\t\t\t.padding(0.1);\r\n\r\n\t\tconst y1 = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(props.data, (d) => d[props.yAxis])])\r\n\t\t\t.rangeRound([height - margin.bottom, margin.top]);\r\n\r\n\t\tlet xAxis = d3.axisBottom(x);\r\n\t\tsvg.select('.x-axis')\r\n\t\t\t\t.attr(\"transform\",`translate(0,${height - margin.bottom})`)\r\n\t\t\t\t.call(xAxis)\r\n\r\n\t\tlet y1Axis = d3.axisLeft(y1)\r\n\t\tsvg.select(\".y-axis\")\r\n\t\t\t.attr(\"transform\",`translate(${margin.left}, 0)`)\r\n\t\t\t.call(y1Axis);\r\n\r\n\t\tsvg\r\n\t\t\t.select(\".plot-area\")\r\n\t\t\t.attr(\"fill\", \"steelblue\")\r\n\t\t\t.selectAll(\".bar\")\r\n\t\t\t.data(props.data)\r\n\t\t\t.join(\"rect\")\r\n\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t.attr(\"x\", (d) => x(d[props.xAxis]))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"y\", (d) => y1(d[props.yAxis]))\r\n\t\t\t.attr(\"height\", (d) => y1(0) - y1(d[props.yAxis]));\r\n\t\t},\r\n\t\t[props.data.length]\r\n\t);\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tref={ref}\r\n\t\t\tstyle={{\r\n\t\t\t\theight: 500,\r\n\t\t\t\twidth: 1000,\r\n\t\t\t\tmarginRight: \"0px\",\r\n\t\t\t\tmarginLeft: \"0px\",\r\n\t\t\t\tbackgroundColor:\"white\"\r\n\t\t\t}}\r\n\t\t\tclassName={props.classAdd}\r\n\t\t>\r\n\t\t\t<text transform={\"rotate(-90)\"} y={15} x={0 - (height/2)} style={{\r\n\t\t\t\tfill:\"black\",\r\n\t\t\t\ttextAnchor:\"middle\",\r\n\t\t\t\tfontWeight:\"bold\"\r\n\t\t\t}}>Number of Tasks</text>\r\n\t\t\t<g className=\"plot-area\" />\r\n\t\t\t<g className=\"x-axis\" />\r\n\t\t\t<g className=\"y-axis\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport const useD3 = (renderChartFn, dependencies) => {\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        renderChartFn(d3.select(ref.current));\r\n        return () => {};\r\n    }, dependencies);\r\n    return ref;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport BarChart from './BarChart';\r\nimport Button from './Button';\r\n\r\nexport default function TaskAnalytics() {\r\n    const [dataLoaded,setDataLoaded] = useState(false);\r\n    const [dataByDept, setDataByDept] = useState([]);\r\n    const [dataByEmp, setDataByEmp] = useState([]);\r\n    const [dataByStatus, setDataByStatus] = useState([]);\r\n    const [chartData, setChartData] = useState([]);\r\n    const [xAxis, setXAxis] = useState(\"deptName\");\r\n    const [yAxis, setYAxis] = useState(\"taskCount\");\r\n    const [btnActive, setBtnActive] = useState(\"dataByDept\");\r\n    const [key, setKey] = useState(0);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://databasedesignprojapi.herokuapp.com/queries/getTaskCountOfDepartment\")\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n            setDataByDept(response);\r\n            setChartData(response);\r\n        })\r\n\r\n        fetch(\"https://databasedesignprojapi.herokuapp.com/queries/getTaskCountOfUser\")\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n            setDataByEmp(response);\r\n        })\r\n\r\n        fetch(\"https://databasedesignprojapi.herokuapp.com/queries/getTaskCountByStatus\")\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n            setDataByStatus(response);\r\n        })\r\n    }, [])\r\n\r\n    const setEmpData = () => {\r\n        console.log(\"clicked Emp\")\r\n        setKey(key + 1);\r\n        setBtnActive(\"dataByEmp\");\r\n        setXAxis(\"name\");\r\n        setChartData(dataByEmp);\r\n    }\r\n\r\n    const setDeptData = () => {\r\n        console.log(\"clicked dept\")\r\n        setKey(key + 1);\r\n        setBtnActive(\"dataByDept\");\r\n        setXAxis(\"deptName\");\r\n        setChartData(dataByDept);\r\n    }\r\n\r\n    const setStatusData = () => {\r\n        console.log(\"clicked status\")\r\n        setKey(key + 1);\r\n        setBtnActive(\"dataByStatus\");\r\n        setXAxis(\"taskStatus\")\r\n        setChartData(dataByStatus);\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-9-10 grid grid-cols-12 grid-rows-6 gap-4\">\r\n            <Button classAdds={\"row-start-2 col-start-2\"} activeBtn={btnActive} id={\"dataByDept\"} text={\"Tasks By Department\"} onclick={setDeptData}/>\r\n            <Button classAdds={\"row-start-3 col-start-2\"} activeBtn={btnActive} id={\"dataByEmp\"} text={\"Tasks By Employee\"} onclick={setEmpData}/>\r\n            <Button classAdds={\"row-start-4 col-start-2\"} activeBtn={btnActive} id={\"dataByStatus\"} text={\"Tasks By Status\"} onclick={setStatusData}/>\r\n            <BarChart key={key} data={chartData} classAdd={\"border-4 row-start-2 shadow-2xl-15 col-start-4 ticket\"} xAxis={xAxis} yAxis={yAxis}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState} from 'react'\r\nimport TaskList from './TaskList'\r\n\r\nexport default function ViewTasks() {\r\n    const [tasks,setTasks] = useState({});\r\n    const [currentEmp, setCurrentEmp] = useState(\"All\");\r\n    const [empList, setEmpList] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://databasedesignprojapi.herokuapp.com/queries/getTasksByUser\")\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n            findEmpWhoHaveTasks(response);\r\n            setTasks(response);\r\n        })\r\n    }, [])\r\n\r\n    const filterTasks = (tasks,status) => {\r\n        if(currentEmp == \"All\"){\r\n            return filterTasksByStatus(tasks,status);\r\n        }else{\r\n            return filterTasksByStatusAndEmployee(tasks,status,currentEmp);\r\n        }\r\n    }\r\n    const filterTasksByStatus = (tasks,status) => {\r\n        let data = {};\r\n        Object.keys(tasks).map((d) => {\r\n            if(doesEntryMatch(tasks[d].status,status)){\r\n                data[d] = tasks[d];\r\n            }\r\n        })\r\n        return data;\r\n    }\r\n    const filterTasksByStatusAndEmployee = (tasks,status,emp) => {\r\n        let data = {};\r\n        Object.keys(tasks).map((d) => {\r\n            if(doesEntryMatch(tasks[d].status,status) && doesEntryMatch(tasks[d].assignedTo,emp)){\r\n                data[d] = tasks[d];\r\n            }\r\n        })\r\n        return data;\r\n    }\r\n    const doesEntryMatch = (entry,matchValue) =>{\r\n        return entry.toLowerCase() === matchValue.toLowerCase();\r\n    }\r\n    const findEmpWhoHaveTasks = (tasks) => {\r\n        let locEmpList = [];\r\n        Object.keys(tasks).forEach((key) => {\r\n            if(!locEmpList.includes(tasks[key].assignedTo)){\r\n                locEmpList.push(tasks[key].assignedTo);\r\n            }\r\n        })\r\n        setEmpList(locEmpList);\r\n    }\r\n    const genEmpsOptions = (option) => {\r\n        return <option key={option}>{option}</option>\r\n    }\r\n    const updateCurrentEmp = (event) => {\r\n        setCurrentEmp(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"grid grid-cols-7 font-bold text-gray-100 text-2xl\">\r\n            <div className=\"\">\r\n                <div className=\"\">\r\n                    Employee:\r\n                </div>\r\n                <select id=\"empSelector\" className=\"text-black\" onChange={updateCurrentEmp}>\r\n                    <option>All</option>\r\n                    {empList.map(genEmpsOptions)}\r\n                </select>\r\n            </div>\r\n            <div className=\"col-start-4\">\r\n                Current Tasks\r\n            </div>\r\n        </div>\r\n        <div className='grid text-xl gap-2 grid-rows-6 h-9-10'>            \r\n            <div className=\"row-span-5 grid-cols-5 grid col-span-5\">\r\n                <TaskList title='Todo' task={filterTasks(tasks,\"todo\")}/>\r\n                <TaskList title='In Progress' task={filterTasks(tasks,\"in progress\")}/>\r\n                <TaskList title='Staging' task={filterTasks(tasks,\"staging\")}/>\r\n                <TaskList title='UAT' task={filterTasks(tasks,\"uat\")}/>\r\n                <TaskList title='Production' task={filterTasks(tasks,\"production\")}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ManageTasks from './ManageTasks'\r\nimport TaskAnalytics from './TaskAnalytics';\r\nimport ViewTasks from './ViewTasks'\r\n\r\nexport default function Body(props) {\r\n    const whatToShow = () =>{\r\n        switch (props.show) {\r\n            case 'view':\r\n                return <ViewTasks/>\r\n            case 'add':\r\n                return <ManageTasks/>\r\n            case 'anal':\r\n                return <TaskAnalytics/>\r\n            default:\r\n                return <></>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {whatToShow()}\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from './Button'\r\n\r\nexport default function Login(props) {\r\n    const [message,setMessage] = useState(\"\")\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        let password = document.querySelector('#password').value;\r\n        let username = document.querySelector('#username').value;\r\n\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify({\r\n            username:username,\r\n            pass:password\r\n        });\r\n\r\n        var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://databasedesignprojapi.herokuapp.com/posts/login\", requestOptions)\r\n        .then(response => response.text())\r\n        .then(result => {\r\n            result = JSON.parse(result);\r\n            console.log(result);\r\n            if(result.authenticated == true){\r\n                props.login()\r\n            }else{\r\n                setMessage(\"Incorrect Login Information\");\r\n            }\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-12 h-full grid-rows-6\">\r\n            <form className=\"col-start-5 col-span-4 rounded row-start-3 row-span-2 bg-gray-100 border-4 border-black grid grid-cols-3 grid-rows-6 shadow-xl gap-3 rounded\">\r\n                <div className=\"col-span-full row-start-2 text-3xl\">Enter Login Information</div>\r\n                <div className=\"col-start-2 row-start-3\">\r\n                    Username:\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Username'\r\n                        id='username'\r\n                        className=\"rounded\"\r\n                    />\r\n                </div>                \r\n                <div className=\"col-start-2 row-start-4\">\r\n                    Password:\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        id='password'\r\n                        className=\"rounded\"\r\n                    />    \r\n                </div>\r\n                <Button text={'Login'} classAdds={\"col-start-2 row-start-5 hover:text-black\"} onclick={handleLogin}/>\r\n                <p className=\"col-start-1 row-start-6 col-span-3 text-red-600 font-bold glow\">{message}</p>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\n//import logo from './logo.svg';\nimport './App.css';\nimport './index.css';\nimport Header from './components/Header';\nimport Body from './components/Body';\nimport Login from './components/Login';\n\nfunction App() {\n  const [body,setBody] = useState('view');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const showViewTasks = () => {\n    setBody('view');\n  }\n  const showAnalytics = () => {\n    setBody('anal');\n  }\n  const showAddTask = () => {\n    setBody('add');\n  }\n  const handleLogin = () => {\n    setLoggedIn(true);\n  }\n\n  const handleLogout = () => {\n    setLoggedIn(false);\n  }\n  const whatToShow = () => {\n    if(loggedIn){\n      return  <>\n                <Header showViewTask={showViewTasks} showAnalytics={showAnalytics} showAddTask={showAddTask} body={body} logout={handleLogout}/>\n                <Body show={body}/>\n              </>\n    }else{\n      return <Login login={handleLogin}/>\n    }\n  }\n  return (\n    <div className=\"App h-screen font-mono overflow-hidden\">\n      {whatToShow()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}